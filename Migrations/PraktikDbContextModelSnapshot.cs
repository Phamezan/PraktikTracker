// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PraktikTracker.Data;

#nullable disable

namespace PraktikTracker.Migrations
{
    [DbContext(typeof(PraktikDbContext))]
    partial class PraktikDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PraktikTracker.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Answer")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("EmailSent")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FollowUpDate")
                        .HasColumnType("date");

                    b.Property<bool>("HasSentApplication")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SentViaWebsite")
                        .HasColumnType("bit");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Answer = 0,
                            Description = "",
                            EmailSent = new DateOnly(2025, 6, 23),
                            FollowUpDate = new DateOnly(2025, 10, 4),
                            HasSentApplication = true,
                            Name = "Hesehus",
                            SentViaWebsite = true,
                            URL = "https://www.hesehus.dk/karriere/praktik-og-studieprojekt"
                        },
                        new
                        {
                            Id = 2,
                            Answer = 0,
                            Description = "",
                            EmailSent = new DateOnly(2025, 6, 23),
                            FollowUpDate = new DateOnly(2025, 10, 4),
                            HasSentApplication = true,
                            Name = "Vitec",
                            SentViaWebsite = true,
                            URL = "https://jobs.vitecsoftware.dk/jobs/1208909-praktikperiode-hos-vitec-software-group"
                        },
                        new
                        {
                            Id = 3,
                            Answer = 0,
                            Description = "Arbejder i mange sprog og frameworks som f.eks. C# og React",
                            EmailSent = new DateOnly(2025, 6, 23),
                            FollowUpDate = new DateOnly(2025, 10, 4),
                            HasSentApplication = true,
                            Name = "Viking",
                            SentViaWebsite = false,
                            URL = "https://www.vikingsoftware.com/get-in-touch/"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
